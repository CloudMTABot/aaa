# Golang CircleCI 2.0 configuration
version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang:1.11.5
    environment:
      - DEP_VERSION: 0.5.0
    working_directory: ~/workdir
    steps:
      - checkout
  test:
    docker:
      - image: circleci/golang:1.13.3
    working_directory: ~/workdir
    steps:
      - checkout
      - run: echo "INTEGRATION TEST !!!"
  
#  compliance:
#    docker:
#      - image: circleci/python:3.6.4
#    working_directory: ~/workdir
#    steps:
#      - checkout
#      - run:
#          name: compliance check
#          command: |
#            pip3 install --user reuse
#            ~/.local/bin/reuse lint
            
  release:
    docker:
      - image: circleci/golang:1.13.3  
    working_directory: ~/workdir
    steps:
      - add_ssh_keys:
          fingerprints:
            - "6c:7e:c8:28:cd:0b:94:b6:c8:f1:3f:71:40:a1:6e:fd"
      - checkout
      - run:
          name: new release
          command: |
            #Tag
            #Make sure HEAD points to master
            git checkout master
            CURR_MBT_VERSION=$(cat ./VERSION)
            echo "Current release: ${CURR_MBT_VERSION}"
            if [[-z "$MBT_VERSION_MANUAL"]]; then 
              echo "MBT_VERSION manual!!!"
              MBT_VERSION=$MBT_VERSION_MANUAL
            else
              MBT_VERSION=$(echo $CURR_MBT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
            fi
            echo "New release: ${MBT_VERSION}"
            sed  -i "s/${CURR_MBT_VERSION}/${MBT_VERSION}/" ./VERSION
            #Add all updated files to commit
            git add ./VERSION
            git config user.email "michawa@gmail.com"
            git config user.name "michawai"
            git commit -m "[skip ci] Bump version ${MBT_VERSION}"
            #Push commit directly to master
            git push -q https://github.com/michawai/aaa.git master
            git tag -a v${MBT_VERSION} -m "New release ${MBT_VERSION}"
            git push https://github.com/michawai/aaa.git v${MBT_VERSION}
            git checkout docker
            sed  -i "/ARG MBT_VERSION=/ s/${CURR_MBT_VERSION}/${MBT_VERSION}/" ./Dockerfile
            #Add all updated files to commit
            git add ./Dockerfile
            git config user.email "michawa@gmail.com"
            git config user.name "michawai"
            git commit -m "[skip ci] Bump version ${MBT_VERSION}"
            #Push commit directly to docker
            git push https://github.com/michawai/aaa.git docker
  
  publish:
    docker:
      - image: circleci/node:13.1.0
    working_directory: ~/workdir
    steps:
      - add_ssh_keys:
          fingerprints:
            - "6c:7e:c8:28:cd:0b:94:b6:c8:f1:3f:71:40:a1:6e:fd"
      - checkout
      - run:
          name: publish to npm
          command: |
            npm -v
            git push -u origin --delete dummy

  image:
    docker:
      - image: docker:17.05.0-ce-git
    working_directory: ~/go/src/github.com/SAP/cloud-mta-build-tool
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: checkout docker branch
          command: |
            MBT_VERSION=$(cat ./VERSION)
            git checkout docker
      - run:
          name: install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0
      - run:
          name: build docker image
          command: |
            echo "Image release: ${MBT_VERSION}"
            docker build -t michci:${MBT_VERSION} .
#      - run:
#          name: run docker tests
#          command: |
#            docker-compose -f ./docker-compose.test.yml up
      - run:
          name: push docker image
          command: |
            echo "Image release: ${MBT_VERSION}"
            docker login docker.pkg.github.com -u michawai -p $MICHAWAI_GITHUB_TOKEN
            docker tag michci:${MBT_VERSION} docker.pkg.github.com/michawai/aaa/michci:${MBT_VERSION}
            docker push docker.pkg.github.com/michawai/aaa/michci:${MBT_VERSION}

workflows:
  version: 2
  
  on_pr_docker:
    jobs:
      - image:
          filters:
            branches:
              only: docker
  on_pr:
    jobs:
      - build:
          filters:
            branches:
              ignore: master, docker
              
  on_merge:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
              
  on_tag_release:
    jobs:
#      - compliance:
#          filters:  # required since `deploy` has tag filters AND requires `build`
#            tags:
#              only: /dummy/
#            branches:
#              ignore: /.*/
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /dummy/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /dummy/
            branches:
              ignore: /.*/
      - release:
          requires:
            - test
          filters:
            tags:
              only: /dummy/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - release
          filters:
            tags:
              only: /dummy/
            branches:
              ignore: /.*/
      - image:
          requires:
            - release
          filters:  # job runs on tag 'release' for no branches
            tags:
              only: /dummy/
            branches:
              ignore: /.*/
